# -*- coding: utf-8 -*-
"""Copy of Zach Version -  Untitled1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CuR2656yOhQzfkfUUdFuIeqEG1QG6_KF

# Functions and Imports
"""

# Commented out IPython magic to ensure Python compatibility.
#imports the rquired modules for the code
import random
import datetime
from pprint import pprint 
import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline


favourites_list = [] #favourite list of products
favourites_list_meals = [] #favourite list of products

#dictionaries for the stored nutrients based on consumed products
cal_dict = {'Monday' : 0, 'Tuesday' : 0, 'Wednesday' : 0, 'Thursday' : 0, 'Friday' : 0,'Saturday' : 0,'Sunday' : 0}
fat_dict = {'Monday' : 0, 'Tuesday' : 0, 'Wednesday' : 0, 'Thursday' : 0, 'Friday' : 0,'Saturday' : 0,'Sunday' : 0}
pro_dict = {'Monday' : 0, 'Tuesday' : 0, 'Wednesday' : 0, 'Thursday' : 0, 'Friday' : 0,'Saturday' : 0,'Sunday' : 0}
sug_dict = {'Monday' : 0, 'Tuesday' : 0, 'Wednesday' : 0, 'Thursday' : 0, 'Friday' : 0,'Saturday' : 0,'Sunday' : 0}
car_dict = {'Monday' : 0, 'Tuesday' : 0, 'Wednesday' : 0, 'Thursday' : 0, 'Friday' : 0,'Saturday' : 0,'Sunday' : 0}

#lists for activity list part of code
monday_activity_list = []
tuesday_activity_list = []
wednesday_activity_list = []
thursday_activity_list = []
friday_activity_list = []
saturday_activity_list = []
sunday_activity_list = []

#lists for daily activity calorie part of code
monday_each_daily_calories = []
tuesday_each_daily_calories = []
wednesday_each_daily_calories = []
thursday_each_daily_calories = []
friday_each_daily_calories = []
saturday_each_daily_calories = []
sunday_each_daily_calories = []

#lists daily calorie total
calories_multiplied = []

#open and loading pandas and csv files for product and recipe information
product_panda = pd.read_csv('https://docs.google.com/spreadsheets/d/e/2PACX-1vRJYFDJaQC7Ohr5seXuRv6q_Vw-SnMJlQS5zUNFwv7LzlxtvGqG3a7KeuqMew9aThPkDLCvsh-YGPlm/pub?gid=0&single=true&output=csv')
recipe_panda = pd.read_csv('https://docs.google.com/spreadsheets/d/e/2PACX-1vRJYFDJaQC7Ohr5seXuRv6q_Vw-SnMJlQS5zUNFwv7LzlxtvGqG3a7KeuqMew9aThPkDLCvsh-YGPlm/pub?gid=231048599&single=true&output=csv')
better_product_panda = pd.read_csv('https://docs.google.com/spreadsheets/d/e/2PACX-1vRJYFDJaQC7Ohr5seXuRv6q_Vw-SnMJlQS5zUNFwv7LzlxtvGqG3a7KeuqMew9aThPkDLCvsh-YGPlm/pub?gid=2146737155&single=true&output=csv')
product_panda['Name'] = product_panda['Name'].astype("string")

#Main Welcome Function - For New Users
def new_user():
  print("""
  It appears that you are a new user, thanks for joining the SPINACH family!
  To begin off, we will need to know some personal details about you.
  Don't worry, this information will be secure and never shared to others.
  This information will help us suggest more suitable products, help with your diet, and help you keep track of your food.
  Please read carefully and complete them to the best of your abilities. Being honest is important, but there are no wrong answers.
  Thank you!
  """)
  global name
  print("General Information")
  name = input("Please enter your name ") #request name
  global gender
  gender = input("What is your gender: male or female? (male / female) ") #requesting gender
  while gender not in ['male', 'female']:
    gender = input("Please enter a valid input. What is your gender: male or female or other ? (male / female/ other) ") #requesting gender until vaild input
  global weight
  weight = int(input("Enter your weight in kg ")) # requesting weight
  while weight not in range(0,250):
    weight = int(input("Please enter a valid input. Enter your weight in kg ")) # requesting weight until valid input
  global height
  height = int(input("Enter your height in cm ")) # requesting height
  while height not in range(0,250):
    height = int(input("Please enter a valid input. Enter your height in cm ")) # requesting height until valid input
  global age
  age=int(input("Enter your age ")) # requesting age
  while age not in range(0,101):
    age = int(input("Please enter a valid input. Enter your age ")) # requesting age until valid

  print("----------------------------")

  print("Specific Lifestyle Information")
  global special_diets
  special_diets = input("Please enter if you have any special diets (Vegan or Vegetatian). If you have none, please enter N/A. ")
  while special_diets not in ['Vegan', 'Vegetarian', 'N/A']:
    special_diets = input("Please enter if you have any special diets (Vegan or Vegetatian). If you have none, please enter N/A. ") # requesting diet until valid

  global calories
  if gender == "female":
        calories = (9.247*weight)  + (3.098*height) - (4.330*age) + 447.593

  elif gender == "male":
        calories = (13.397*weight) + (4.799*height) - (5.677*age) + 88.362    

  print("----------------------------")

  print("""
  Thank you for completing this background personal information.
  You are now a true member, welcome!
  """) 

#Main Welcome Code - For Both New Users and Existing Users
def welcome():
  print("""
  Welcome to the SPINACH App, helping you find a healthy version of your life.
  This app is always being improved, but please try out it's many features.
  Hope you enjoy!
  """)

  print("""
  Welcome Zachary Thurston! Please enter "HELLO".
  Are you not Zachary Thurston? Then enter "OTHER".
  Thank you!
  """)

  login = input("Please enter your response: ") #Verify login to see if it is the user or another one
  while login not in ['HELLO','OTHER']:
    login = input("""
    Please enter "HELLO" if you are Zachary Thurston.
    Otherwise, please enter "OTHER".
    All other inputs are invalid and will require another input, thank you! 
    """)
#If the user is the same as the app suggested, then preload with the answers to these questions
  if login == 'HELLO':
    print("Great to have you back Zachary!")
    global name
    name = 'Zachary Thurston'
    global gender
    gender = 'male'
    global weight
    weight = 80
    global height
    height = 175
    global age
    age = 18
    global special_diets
    special_diets = 'Vegan'
    global calories
    calories = 1897

#otherwise, run the new user function to get the user's information
  else:
    new_user()

  print("----------------------------")

  print("""
  Here is the current information for you:
  """)

  print("Your Profile")
  print("Welcome ", name)
  print("Age: ", age)
  print("Gender: ", gender)
  print("Weight: ", weight, "kg")
  print("Height: ", height , "cm")
  print("Special Diets: ", special_diets)

  print("----------------------------")
  print("Have a good day", name)

#function for the daily input of sports and exercise
def activity_list(n,d):
  sports_list = ["running","yoga", "skating", "swimming", "basketball", "soccer", "No"]
  print("Sports List: running, yoga, skating, swimming, basketball, soccer, No")
  i = input(f"Enter a sport you did on {d} from the list above: ") #requesting daily sport
  while i not in sports_list:
    i = input("Invalid answer. Please enter a valid sport from the list above. ") # requesting a new sport until valid input
  n.append(i)

#function for the calorie calculation for the daily input of sports and exercise
def activity_calories_calc(list, daily_calories):
  for i in list:
    sports_dict = {"running" : 250, "yoga": 400, "soccer": 476, "No": 0, "skating": 750, "swimming": 223, "basketball": 300}
    sports_value = sports_dict.get(i)
    daily_calories.append(sports_value)

#function for the calorie calculation for the daily input of sports and exercise - Part 2
def activity_level_daily(m):
  Sum = sum(m)
  return(Sum)

  if Sum == 0:
    y = int(Sum)
  elif Sum == 500:
    y = int(Sum * 1.2)
  elif Sum == 750:
    y = int(Sum * 1.375)
  elif Sum == 1000:
    y = int(Sum * 1.55)
  
  calories_multiplied.append(y)

#Main Spinach App Code
def spinach(cal_dict, fat_dict, pro_dict, sug_dict, car_dict):

  #MAIN MENU - Scan New Product OR View Favourite Products & Recipes

  print("""
  SPINACH Main Menu.
  Please select one of the options to proceed:
  """)

  menu_option = int(input("""
  Please enter '1' if you would like to continue with 'Scan New Product'
  Please enter '2' if you would like to continue with 'View Favourite Products and Recipes'
  Please enter '3' if you would like to view your weekly consumed chart
  Please enter '4' if you would like to add completed daily activities
  All other inputs are invalid and will require another input, thank you! 
  """))
  while menu_option not in [1,2,3,4]:
    menu_option = int(input("""
    Please enter '1' if you would like to continue with 'Scan New Product'
    Please enter '2' if you would like to continue with 'View Favourite Products and Recipes'
    Please enter '3' if you would like to view your weekly consumed chart
    Please enter '4' if you would like to add completed daily activities
    All other inputs are invalid and will require another input, thank you! 
    """))

  #Ask the user for a product barcode and ensure it matches validation

  if menu_option == 1:
      barcode = int(input("""
      Please enter the UPC of the product you wish to scan. (The UPC is the numbes located under the barcode of the product)
      Acceptable UPCs - 6811317998980, 6810005861000, 6410003632000, 6136243430000, 5849632873000, 5700003717000
      """))
      while barcode not in set(product_panda['UPC']):
        barcode = int(input("""
        Please enter the VALID UPC of the product you wish to scan. It must be only 13 characters long. (The UPC is the numbes located under the barcode of the product)
        """))

      selected_product = product_panda.loc[product_panda['UPC'] == barcode]        

      #Main Function for Scan Feature
      #Main option menu with validation

      def scan_options(selected_product): 
          q = selected_product["Name"].loc[selected_product.index[0]]
          menu2 = int(input("""
          Scanner Menu:
          Please enter '1' if you want to continue with product information
          Please enter '2' if you would like to add it to your favourite list
          Please enter '3' if you would like to see recipes with this product
          Please enter '4' if you would like to add this to your weekly consumed chart  
          Please enter '5' if you would like to stop using the app
          All other inputs are invalid and will require another input, thank you! 
          """))
          while menu2 not in [1,2,3,4,5]:
              menu2 = int(input("""
              Scanner Menu:
              Please enter '1' if you want to continue with product information
              Please enter '2' if you would like to add it to your favourite list
              Please enter '3' if you would like to see recipes with this product
              Please enter '4' if you would like to add this to your weekly consumed chart  
              Please enter '5' if you would like to stop using the app
              All other inputs are invalid and will require another input, thank you! 
              """))
          if menu2 == 1: #if the user wants to simply see the product, the product information is printed and then returned to the main scan menu
            display(selected_product.iloc[:, 0:10])
            y = int(selected_product['Toxicity'])
            if y >= 50:
                  print("This product's toxicity is too high. We recommend you look for a healthier product that has a score less than 50. How about this product?")
                  better_selected_product2 = better_product_panda.loc[better_product_panda['Name of Old Product'] == q]
                  display(better_selected_product2.iloc[:, 0:10])
                  print("This product is avaiable at your local Mercadona store") #Additional geographic information may be added eventually

                  better_product_menu = int(input("""
                      Suggested Product Menu:
                      Please enter '1' if you would like to go back to the main menu using the suggested product's information
                      Please enter '2' if you would like to go back to the main menu using the product you scanned earlier
                      All other inputs are invalid and will require another input, thank you! 
                      """))
                  while better_product_menu not in [1,2]:
                    better_product_menu = int(input("""
                      Suggested Product Menu:
                      Please enter '1' if you would like to go back to the main menu using the suggested product's information
                      Please enter '2' if you would like to go back to the main menu using the product you scanned earlier
                      All other inputs are invalid and will require another input, thank you! 
                      """))
                  if better_product_menu == 1:
                    selected_product = better_selected_product2
                    scan_options(selected_product)
                  else:
                    scan_options(selected_product)
            else:
                  print("This product is healthy according to the toxicity score! We think it's a great choice for you!")
            scan_options(selected_product)

          elif menu2 == 2: #option to add the product to their favourite list
              if q not in favourites_list: #if the product is not already in the list, then it adds it -- prevents duplication
                  favourites_list.append(q)
                  print("This product has been added to your favourites list.")
              else:
                  print("This product is already apart of your favourites list.")
          
          #option for user to either see their favourite product list or go back to the previous menu -- with input validation
          
              favourite_option_1 = int(input("""
              Would you like to see your entire favourites list or go back to the previous menu?
              Please enter '1' if you want to see your favourites list
              Please enter '2' if want to go back to the previous menu
              All other inputs are invalid and will require another input, thank you! 
              """))
              while favourite_option_1 not in [1, 2]:
                  favourite_option_1 = int(input("""
                  Would you like to see your entire favourites list or go back to the previous menu?
                  Please enter '1' if you want to see your favourites list
                  Please enter '2' if want to go back to the previous menu
                  All other inputs are invalid and will require another input, thank you! 
                  """))
          #prints the current time and the favourite products list, then returns the user back to main scan menu
              if favourite_option_1 == 1:
                  time = datetime.datetime.now()
                  print("Here is current favourite list as of", time)
                  pprint(favourites_list)
                  scan_options(selected_product)
              else:
                  scan_options(selected_product)
        
          #At this time, the selected recipe will be randomly selected, however, this functionality will be improved later. The code will also continue to randomly select from this recipe list if the user wants to see a different recipe.
          elif menu2 == 3:
              #find the name of the product -> find the main ingreidnt in the other database and the connectio -> find the recipe with that
              #first_recipe = recipe_panda.loc[recipe_panda['Main Ingreident'] == barcode]        
              m = selected_product['Main Ingredient'].loc[selected_product.index[0]]
              first_recipe = recipe_panda.loc[recipe_panda["Main Ingredient"] == m]
              fr = first_recipe['Name'].loc[first_recipe.index[0]]
              print("A recipe with this ingredient is", fr)
              meal_option_1 = int(input("""
              Would you like to see this recipe or see another option?
              Please enter '1' if you want to see this recipe
              Please enter '2' if want to see another option
              All other inputs are invalid and will require another input, thank you! 
              """))
              while meal_option_1 not in [1, 2]:
                  meal_option_1 = int(input("""
                  Would you like to see this recipe or see another option?
                  Please enter '1' if you want to see this recipe
                  Please enter '2' if want to see another option
                  All other inputs are invalid and will require another input, thank you! 
                  """))
              while meal_option_1 == 2:
                # first_recipe = recipe_panda.loc[2]
                  print("Sadly this is the only recipe with this ingredient. Please select '1' to continue")
                # print("A recipe with this ingredient is", first_recipe['Name'])
                  meal_option_1 = int(input("""
                  Would you like to see this recipe or see another option?
                  Please enter '1' if you want to see this recipe
                  Please enter '2' if want to see another option
                  All other inputs are invalid and will require another input, thank you! 
                  """))
                  while meal_option_1 not in [1, 2]:
                      meal_option_1 = int(input("""
                      Would you like to see this recipe or see another option?
                      Please enter '1' if you want to see this recipe
                      Please enter '2' if want to see another option
                      All other inputs are invalid and will require another input, thank you! 
                      """))
              if meal_option_1 == 1: #prints the ingredients and steps of the recipe
                  print("-----------------------")
                  print(first_recipe["Name"].loc[first_recipe.index[0]])
                  print("-----------------------")
                  print(first_recipe['Steps (Part 1)'].loc[first_recipe.index[0]])
                  print("-----------------------")
                  print(first_recipe['Steps (Part 2)'].loc[first_recipe.index[0]])
                  print("-----------------------")
                  print(first_recipe['Steps (Part 3)'].loc[first_recipe.index[0]])
                  meal_option_2 = int(input("""
                  Would you like to add this recipe to your favourite list or go back to the previous menu?
                  Please enter '1' if you want to add this recipe
                  Please enter '2' if want to go back
                  All other inputs are invalid and will require another input, thank you! 
                  """))
                  while meal_option_2 not in [1, 2]:
                      meal_option_2 = int(input("""
                      Would you like to add this recipe to your favourite list or go back to the previous menu?
                      Please enter '1' if you want to add this recipe
                      Please enter '2' if want to go back
                      All other inputs are invalid and will require another input, thank you! 
                      """))
                  if meal_option_2 == 1:
                      r = first_recipe["Name"].loc[first_recipe.index[0]]
                      if r not in favourites_list_meals:
                          favourites_list_meals.append(r)
                          print("This recipe has been added to your favourites list.")
                      else:
                          print("This recipe is already apart of your favourites list.")
                      favourite_option_2 = int(input("""
                      Would you like to see your entire favourites list or go back to the previous menu?
                      Please enter '1' if you want to see your favourites list
                      Please enter '2' if want to go back to the previous menu
                      All other inputs are invalid and will require another input, thank you! 
                      """))
                      #prints the current time and the favourite recipes list, then returns the user back to main scan menu
                      while favourite_option_2 not in [1, 2]:
                          favourite_option_2 = int(input("""
                          Would you like to see your entire favourites list or go back to the previous menu?
                          Please enter '1' if you want to see your favourites list
                          Please enter '2' if want to go back to the previous menu
                          All other inputs are invalid and will require another input, thank you! 
                          """))
                      if favourite_option_2 == 1:
                          time = datetime.datetime.now()
                          print("Here is current favourite list as of", time)
                          pprint(favourites_list_meals)
                          scan_options(selected_product)
                      else:
                          scan_options(selected_product)
                  else:
                      scan_options(selected_product)
              else:
                  scan_options(selected_product)
          elif menu2 == 4:
            print("""
            You have selected the option to add this product to your weekly consumed chart.
            This option will allow you to keep track of the daily nutrient intakes.
            """)
            daily_consumed_menu = input("""
                  Please enter which day of the week you would like to add this product to.
                  [Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday]
                  Please ensure capitalization and spelling is correct 

                  If you want to go back to the main menu instead, please enter '1'.
                  All other inputs are invalid and will require another input, thank you! 
                  """)
            while daily_consumed_menu not in ['Monday','Tuesday','Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday', '1']:
                      daily_consumed_menu = input("""
                      Please enter which day of the week you would like to add this product to.
                      [Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday]
                      Please ensure capitalization and spelling is correct 

                      If you want to go back to the main menu instead, please enter '1'.
                      All other inputs are invalid and will require another input, thank you! 
                      """)
            if daily_consumed_menu == '1':
              spinach(cal_dict, fat_dict, pro_dict, sug_dict, car_dict)
            else:
              print("This has been added successfully")
              def daily_consumed_addition(n, cal_dict, fat_dict, pro_dict, sug_dict, car_dict):

                cal_dict[n] = cal_dict.get(n) + int(selected_product["Total Calories"].loc[selected_product.index[0]])
                fat_dict[n] = fat_dict.get(n) + int(selected_product["Total Fat"].loc[selected_product.index[0]])
                pro_dict[n] = pro_dict.get(n) + int(selected_product["Total Protein"].loc[selected_product.index[0]])
                sug_dict[n] = sug_dict.get(n) + int(selected_product["Total Sugar"].loc[selected_product.index[0]])
                car_dict[n] = car_dict.get(n) + int(selected_product["Total Carbs"].loc[selected_product.index[0]])

                return(cal_dict)
                return(fat_dict)
                return(pro_dict)
                return(sug_dict)
                return(car_dict)

              daily_consumed_addition(daily_consumed_menu, cal_dict, fat_dict, pro_dict, sug_dict, car_dict)
              spinach(cal_dict, fat_dict, pro_dict, sug_dict, car_dict)
          
          #quits the code if the user is finished with the app
          elif menu2 == 5:
              print("Thank you for using the SPINACH App. I hope you enjoyed it.")
              print("Good-Bye!")
              quit()

      scan_options(selected_product)
    #if the user wants to only see the favourite lists, then the code will bring the user to this section, which will print only the specific lists that were requested.
  elif menu_option == 2:
      loved_menu = int(input("""
      Would you like to see your favourite recipes or products?
      Please enter '1' if you want to see your favourite recipes
      Please enter '2' if you want to see your favourite products
      All other inputs are invalid and will require another input, thank you! 
      """))
      while loved_menu not in [1, 2]:
          loved_menu = int(input("""
          Would you like to see your favourite recipes or products?
          Please enter '1' if you want to see your favourite recipes
          Please enter '2' if you want to see your favourite products
          All other inputs are invalid and will require another input, thank you! 
          """))
      if loved_menu == 1:
          pprint(favourites_list_meals)
          spinach(cal_dict, fat_dict, pro_dict, sug_dict, car_dict)

      elif loved_menu == 2:
          pprint(favourites_list)
          spinach(cal_dict, fat_dict, pro_dict, sug_dict, car_dict)

  elif menu_option == 3:

    weekly_nutrients_menu = int(input("""
    Welcome to your weekly consumed charts section - Where you can see your progress this week
    Please enter '1' if you want to your calorie intake chart
    Please enter '2' if you want to your fat intake chart
    Please enter '3' if you want to your protein intake chart
    Please enter '4' if you want to your sugar intake chart
    Please enter '5' if you want to your carbs intake chart
    Please enter '6' if you want to start a new week (Permanently delete all data for this week!)
    All other inputs are invalid and will require another input, thank you! 
    """))

    while weekly_nutrients_menu not in [1,2,3,4,5,6]:
        weekly_nutrients_menu = int(input("""
        Welcome to your weekly consumed charts section - Where you can see your progress this week
        Please enter '1' if you want to your calorie intake chart
        Please enter '2' if you want to your fat intake chart
        Please enter '3' if you want to your protein intake chart
        Please enter '4' if you want to your sugar intake chart
        Please enter '5' if you want to your carbs intake chart
        Please enter '6' if you want to start a new week (Permanently delete all data for this week!)
        All other inputs are invalid and will require another input, thank you! 
        """))

    if weekly_nutrients_menu == 6:
      cal_dict = dict.fromkeys(cal_dict, 0)
      fat_dict = dict.fromkeys(fat_dict, 0)
      pro_dict = dict.fromkeys(pro_dict, 0)
      sug_dict = dict.fromkeys(sug_dict, 0)
      car_dict = dict.fromkeys(car_dict, 0)
      print("This task has been completed.")
  
    elif weekly_nutrients_menu == 1:
      plt.plot(*zip(*cal_dict.items()))
      plt.title("Weekly Calorie Consumption Graph")
      plt.xlabel("Day of the Week")
      plt.ylabel("Total")
      plt.show()

    elif weekly_nutrients_menu == 2:
      plt.plot(*zip(*fat_dict.items()))
      plt.title("Weekly Fat Consumption Graph")
      plt.xlabel("Day of the Week")
      plt.ylabel("Total in grams")
      plt.show()

    elif weekly_nutrients_menu == 3:
      plt.plot(*zip(*pro_dict.items()))
      plt.title("Weekly Protein Consumption Graph")
      plt.xlabel("Day of the Week")
      plt.ylabel("Total in grams")
      plt.show()

    elif weekly_nutrients_menu == 4:
      plt.plot(*zip(*sug_dict.items()))
      plt.title("Weekly Sugar Consumption Graph")
      plt.xlabel("Day of the Week")
      plt.ylabel("Total in grams")
      plt.show()

    elif weekly_nutrients_menu == 5:
      plt.plot(*zip(*car_dict.items()))
      plt.title("Weekly Carbs Consumption Graph")
      plt.xlabel("Day of the Week")
      plt.ylabel("Total in grams")
      plt.show()

    spinach(cal_dict, fat_dict, pro_dict, sug_dict, car_dict)

  #Section of the App for adding and viewing activity/sports
  elif menu_option == 4:

    daily_activities = int(input("""
    Welcome to the completed daily activites section - Add and view your daily activites
    Please enter '1' if you want to add an activity to Monday
    Please enter '2' if you want to add an activity to Tuesday
    Please enter '3' if you want to add an activity to Wednesday
    Please enter '4' if you want to add an activity to Thursday
    Please enter '5' if you want to add an activity to Friday
    Please enter '6' if you want to add an activity to Saturday
    Please enter '7' if you want to add an activity to Sunday
    Please enter '8' if you want to view your current daily activity list for the week and suggested calorie intake
    All other inputs are invalid and will require another input, thank you! 
    """))

    while daily_activities not in [1,2,3,4,5,6,7,8]:
        daily_activities = int(input("""
        Welcome to the completed daily activites section - Add and view your daily activites
        Please enter '1' if you want to add an activity to Monday
        Please enter '2' if you want to add an activity to Tuesday
        Please enter '3' if you want to add an activity to Wednesday
        Please enter '4' if you want to add an activity to Thursday
        Please enter '5' if you want to add an activity to Friday
        Please enter '6' if you want to add an activity to Saturday
        Please enter '7' if you want to add an activity to Sunday
        Please enter '8' if you want to view your current daily activity list for the week and suggested calorie intake
        All other inputs are invalid and will require another input, thank you! 
        """))
    #Depending on the repsonse and the date, the user can add their activity/sport, which will be stored for future use
    if daily_activities == 1:
      d = "Monday"
      n = monday_activity_list
      m = monday_each_daily_calories
      activity_list(n, d)
      activity_calories_calc(n,m)
      activity_level_daily(m)     

    elif daily_activities == 2:
      d = "Tuesday"
      n = tuesday_activity_list
      m = tuesday_each_daily_calories
      activity_list(n,d)
      activity_calories_calc(n,m)
      activity_level_daily(m)   

    elif daily_activities == 3:
      d = "Wednesday"
      n = wednesday_activity_list
      m = wednesday_each_daily_calories
      activity_list(n,d)
      activity_calories_calc(n,m)
      activity_level_daily(m)  

    elif daily_activities == 4:
      d = "Thursday"
      n = thursday_activity_list
      m = thursday_each_daily_calories
      activity_list(n,d)
      activity_calories_calc(n,m)
      activity_level_daily(m)  

    elif daily_activities == 5:
      d = "Friday"
      n = friday_activity_list
      m = friday_each_daily_calories
      activity_list(n,d)
      activity_calories_calc(n,m)
      activity_level_daily(m)  

    elif daily_activities == 6:
      d = "Saturday"
      n = saturday_activity_list
      m = saturday_each_daily_calories
      activity_list(n,d)
      activity_calories_calc(n,m)
      activity_level_daily(m)  

    elif daily_activities == 7:
      d = "Sunday"
      n = sunday_activity_list
      m = sunday_each_daily_calories
      activity_list(n,d)
      activity_calories_calc(n,m)
      activity_level_daily(m)  

    #prints the current list of activites that the user has done (and inputted into the app)
    elif daily_activities == 8:
        print("Monday Activites:", monday_activity_list)
        print("Tuesday Activites:", tuesday_activity_list)
        print("Wednesday Activites:", wednesday_activity_list)
        print("Thursday Activites:", thursday_activity_list)
        print("Friday Activites:", friday_activity_list)
        print("Saturday Activites:", saturday_activity_list)
        print("Sunday Activites:", sunday_activity_list)

    spinach(cal_dict, fat_dict, pro_dict, sug_dict, car_dict)

"""# Main Code"""

#Calls upon the previous functions to run the Welcome portion of the app and the main SPINACH app
welcome()
spinach(cal_dict, fat_dict, pro_dict, sug_dict, car_dict)